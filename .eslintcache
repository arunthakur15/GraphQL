[{"/home/arunthakur/GraphQL/client/src/index.js":"1","/home/arunthakur/GraphQL/client/src/reportWebVitals.js":"2","/home/arunthakur/GraphQL/client/src/App.js":"3","/home/arunthakur/GraphQL/client/src/components/BookList.js":"4","/home/arunthakur/GraphQL/client/src/components/AddBook.js":"5","/home/arunthakur/GraphQL/client/src/queries/queries.js":"6","/home/arunthakur/GraphQL/client/src/components/BookDetails.js":"7"},{"size":500,"mtime":1608450034075,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1608449505578,"results":"10","hashOfConfig":"9"},{"size":538,"mtime":1608483768414,"results":"11","hashOfConfig":"9"},{"size":1306,"mtime":1608660973654,"results":"12","hashOfConfig":"9"},{"size":2140,"mtime":1608483684846,"results":"13","hashOfConfig":"9"},{"size":860,"mtime":1608469301249,"results":"14","hashOfConfig":"9"},{"size":1081,"mtime":1608662534867,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1gf0ck4",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/arunthakur/GraphQL/client/src/index.js",[],["33","34"],"/home/arunthakur/GraphQL/client/src/reportWebVitals.js",[],"/home/arunthakur/GraphQL/client/src/App.js",["35"],"import logo from './logo.svg';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\n\n//components\nimport BookList from './components/BookList';\nimport AddBook from './components/AddBook';\n\nconst client = new ApolloClient({\n  uri: \"http://192.168.0.108:4000/graphql\",\n  cache: new InMemoryCache()\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n    <div className=\"App\">\n      <h1>My Book List</h1>\n     <BookList/>\n     <AddBook/>\n    </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/home/arunthakur/GraphQL/client/src/components/BookList.js",["36","37"],"/home/arunthakur/GraphQL/client/src/components/AddBook.js",["38"],"import React, {Component, useState} from 'react';\nimport { useQuery, compose, useMutation } from '@apollo/client';\n\nimport {getAuthorsQuery,getBooksQuery, addBookMutation} from '../queries/queries';\n\n\n\n\nfunction Authors() {\n    const { loading, error, data } = useQuery(getAuthorsQuery);\n\n    if (loading) return <option>Loading...</option>;\n    if (error) return <option>Error :(</option>;\n    return data.authors.map(author => {\n        return(\n        <option key={author.id} value={author.id}>{author.name}</option>\n        )\n    });\n}\n\nfunction AddBookForm() {\n    const [formState, setFormState] = useState({\n        name: '',\n        genre: '',\n        authorId:''\n      });\n\n    const [addBook] = useMutation(addBookMutation, {\n        variables: {\n          name: formState.name,\n          genre: formState.genre,\n          authorId: formState.authorId\n        },\n        refetchQueries: [{query: getBooksQuery}]\n      });\n    return(\n        \n        <form id=\"add-book\" onSubmit={e => {\n            e.preventDefault();\n            addBook();\n          }}>\n\n        <div className=\"field\">\n            <label>Book Name:</label>\n            <input type=\"text\" value={formState.name} onChange={(e)=> setFormState({\n                ...formState,\n                name:e.target.value\n            })}/>\n        </div>\n\n        <div className=\"field\">\n            <label>Genre:</label>\n            <input type=\"text\" value={formState.genre} onChange={(e)=> setFormState({\n                ...formState,\n                genre:e.target.value\n                })}/>\n        </div>\n\n        <div className=\"field\">\n            <label>Author:</label>\n            <select onChange={(e)=> setFormState({\n                ...formState,\n                authorId:e.target.value\n                })}>\n                <option>\n                    Select Author\n                </option>\n                <Authors/>\n            </select>\n        </div>\n\n        <button type=\"submit\">+</button>\n\n    </form>\n    )\n}\n\nclass AddBook extends Component {\n    \n    render(){\n        return(\n            <AddBookForm/>\n        )\n    }\n}\n\nexport default AddBook;","/home/arunthakur/GraphQL/client/src/queries/queries.js",[],"/home/arunthakur/GraphQL/client/src/components/BookDetails.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":12},{"ruleId":"43","severity":1,"message":"47","line":1,"column":27,"nodeType":"45","messageId":"46","endLine":1,"endColumn":36},{"ruleId":"43","severity":1,"message":"48","line":1,"column":38,"nodeType":"45","messageId":"46","endLine":1,"endColumn":46},{"ruleId":"43","severity":1,"message":"49","line":2,"column":20,"nodeType":"45","messageId":"46","endLine":2,"endColumn":27},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'compose' is defined but never used.","no-global-assign","no-unsafe-negation"]