{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arunthakur/GraphQL/client/src/components/BookList.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { getBooksQuery } from '../queries/queries';\nimport BookDetails from '../components/BookDetails';\n\nconst Books = props => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBooksQuery);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 23\n  }, this);\n  return data.books.map(book => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: e => {\n        props.bookId.id = book.id;\n        console.log(props.bookId.id);\n      },\n      children: book.name\n    }, book.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this);\n  });\n};\n\n_s(Books, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Books;\n\nclass BookList extends Component {\n  constructor({\n    props\n  }) {\n    super(props);\n    this.state = { ...this.props,\n      selected: {\n        id: null,\n        writable: true\n      }\n    };\n  }\n\n  render() {\n    console.log(this.props.book.id);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"book-list\",\n        children: /*#__PURE__*/_jsxDEV(Books, {\n          bookId: this.state.selected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BookDetails, {\n        bookId: this.state.selected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"sources":["/home/arunthakur/GraphQL/client/src/components/BookList.js"],"names":["React","Component","useState","useQuery","getBooksQuery","BookDetails","Books","props","loading","error","data","books","map","book","e","bookId","id","console","log","name","BookList","constructor","state","selected","writable","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,OAAQC,WAAR,MAA0B,2BAA1B;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAErB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACC,aAAD,CAAzC;AAEA,MAAII,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,SAAOC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI;AAC1B,wBACA;AAAkB,MAAA,OAAO,EAAGC,CAAD,IAAO;AAAEP,QAAAA,KAAK,CAACQ,MAAN,CAAaC,EAAb,GAAkBH,IAAI,CAACG,EAAvB;AAA2BC,QAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACQ,MAAN,CAAaC,EAAzB;AAA8B,OAA7F;AAAA,gBAAiGH,IAAI,CAACM;AAAtG,OAASN,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,YADA;AAGH,GAJM,CAAP;AAKH,CAXD;;GAAMV,K;UAE+BH,Q;;;KAF/BG,K;;AAaN,MAAMc,QAAN,SAAuBnB,SAAvB,CAAiC;AAC7BoB,EAAAA,WAAW,CAAC;AAACd,IAAAA;AAAD,GAAD,EAAS;AAChB,UAAMA,KAAN;AACA,SAAKe,KAAL,GAAa,EACT,GAAG,KAAKf,KADC;AAETgB,MAAAA,QAAQ,EAAC;AACLP,QAAAA,EAAE,EAAC,IADE;AAELQ,QAAAA,QAAQ,EAAE;AAFL;AAFA,KAAb;AAOH;;AAEDC,EAAAA,MAAM,GAAE;AACJR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWM,IAAX,CAAgBG,EAA5B;AACA,wBACI;AAAA,8BAEI;AAAI,QAAA,EAAE,EAAC,WAAP;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,MAAM,EAAE,KAAKM,KAAL,CAAWC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI,QAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC;AAAhC;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAvB4B;;AA0BjC,eAAeH,QAAf","sourcesContent":["import React, {Component, useState} from 'react';\nimport { useQuery } from '@apollo/client';\nimport { getBooksQuery } from '../queries/queries';\n\nimport  BookDetails  from '../components/BookDetails';\n\nconst Books = (props) => {\n\n    const { loading, error, data } = useQuery(getBooksQuery);\n\n    if (loading) return <span>Loading...</span>;\n    if (error) return <span>Error :(</span>;\n    return data.books.map(book => {\n        return(\n        <li key={book.id} onClick={(e) => { props.bookId.id = book.id; console.log(props.bookId.id);}} >{book.name}</li>\n        )\n    });\n}\n\nclass BookList extends Component {\n    constructor({props}){\n        super(props);\n        this.state = {\n            ...this.props,\n            selected:{\n                id:null,\n                writable: true\n            }\n        }\n    }\n\n    render(){\n        console.log(this.props.book.id);\n        return(\n            <div>\n                \n                <ul id=\"book-list\">\n                    <Books bookId={this.state.selected}/>\n                </ul>\n                <BookDetails bookId={this.state.selected}/>\n            </div>\n        )\n    }\n}\n\nexport default BookList;"]},"metadata":{},"sourceType":"module"}